const[,,T="",J,p="",u=""]=process.argv;import C from"sharp";C.cache(!1);import{resolve as r,parse as m,basename as G}from"node:path";import{styleText as E}from"node:util";import{existsSync as S,statSync as $,readdirSync as L,readFileSync as W,writeFileSync as U}from"node:fs";import{mkdirs as d,move as k,readJsonSync as q,remove as D,writeJsonSync as M}from"fs-extra/esm";import{fileURLToPath as X}from"node:url";const V=X(import.meta.url),A=/^.+\/(_notes|Icon\r|\.[^\/]+|[^\/]+\.(db|ini|git))$/;async function l(e,t,n){for(const s of L(e,{withFileTypes:!0})){const a=String(s.name).normalize("NFC");if(A.test(a))continue;if(s.isDirectory()){await n(a);continue}const o=r(e,a);t(o,a)}}function w(e,t,n,s=!0,a=e){try{if(!S(e)){console.error(`No change, No replace src:${e}`);return}const o=W(e,{encoding:"utf8"}),f=String(o.replace(t,n));o!==f?U(a,f):s&&console.log(E("magentaBright",`replaceFile fail by same:${e}`))}catch(o){console.error(`replaceFile src:${e} ${o}`)}}function H(e,t,n=!0){if(S(e)||console.error(`chkUpdate err path1=${e}=`),!S(t))return n;const s=$(e,{bigint:!0}),a=$(t,{bigint:!0});return s.mtimeMs>a.mtimeMs}const z=/\.(jpe?g|png)$/,v=/\.(htm|html)$/,P=/\w+\/\*WEBP\*\//g,x=/\.json$/,B=/("image"\s*:\s*")([^.]+(?:\.\d+x\d+)?).*\.(jpe?g|png)"/,I='$1$2.webp","image_bkup":"$2.$3"',Q=/webp","image_bkup":".+(jpe?g|png)"/,Y='$1"',O=V+"on";let i={sum:{baseSize:0,webpSize:0,pathPicCmpWebP:"",pathPicCmpBase:""},hSize:{}};const h=()=>{if(!S(O))return;const e={...i};i=q(O,{encoding:"utf8"}),e.sum={...i.sum};for(const t in i.hSize){const{fld_nm:n,ext:s,baseSize:a,webpSize:o}=i.hSize[t],f=n+"."+s;S(r(p,f))||S(r(u,f))?e.hSize[t]=i.hSize[t]:(e.sum.baseSize-=a,e.sum.webpSize-=o)}i=e},K=(e=-1)=>{const t=Object.entries(i.hSize).sort(([n],[s])=>{const a=n.toUpperCase(),o=s.toUpperCase();return a<o?-1:a>o?1:0});i.hSize=Object.fromEntries(t),M(O,i,{encoding:"utf8"}),e>-1&&process.exit(e)};import Z from"p-queue";const c=new Z({concurrency:50,autoStart:!1});let F=0;const ee=async()=>{F=c.size,console.log(E(["bgGreen","black"],`fn:cnv_mat_pic.ts start: ${F} tasks`)),await c.start().onIdle(),K(0)};let b=()=>{const e=c.size;if(!(e%50>0)){if(e===0){b=()=>{};return}console.log(E(["bgGreen","black"],`fn:cnv_mat_pic.ts ${e}/${F} tasks`))}};function _(e,t,n=!0){return c.add(async()=>{n&&await k(e,t,{overwrite:!0});const{dir:s,name:a}=m(e),{dir:o,ext:f}=m(t),g=o+"/"+a+".webp",y=i.hSize[a]??={fld_nm:G(s)+"/"+a,baseSize:0,webpSize:0,ext:""};try{const R=await C(t).webp({quality:Number(y.webp_q??J)}).toFile(g),N=$(t).size,j=R.size;i.hSize[a]={...y,baseSize:N,webpSize:j,ext:f.slice(1)},i.sum.baseSize+=N,i.sum.webpSize+=j,await k(g,s+"/"+a+".webp",{overwrite:!0}),b()}catch(R){console.log(E(["bgRed","white"],"  [ERR] %o"),R)}})}(async()=>{switch(T){case"enable":await d(u),await l(p,()=>{},async e=>{const t=r(u,e);await d(t),await l(r(p,e),(n,s)=>{if(z.test(s)){c.add(()=>_(n,r(t,s)));return}if(v.test(s)){c.add(()=>{w(n,P,"true/*WEBP*/",!1),b()});return}x.test(s)&&c.add(()=>{w(n,B,I),b()})},async()=>{})});break;case"disable":await l(u,()=>{},async e=>{await l(r(u,e),(t,n)=>{if(!z.test(n))return;const s=r(p,e,n);c.add(async()=>{await k(t,s,{overwrite:!0}),b()});const{name:a}=m(n),o=r(p,e,a+".webp");c.add(async()=>{await D(o),b()})},async()=>{})}),await l(p,()=>{},async e=>{await l(r(p,e),async(t,n)=>{if(v.test(n)){P.lastIndex=0,c.add(()=>{w(t,P,"false/*WEBP*/",!1),b()});return}x.test(n)&&c.add(()=>{w(t,Q,Y),b()})},async()=>{})});break;case"reconv":h(),i.sum.baseSize=i.sum.webpSize=0;for(const{ext:e,fld_nm:t}of Object.values(i.hSize))c.add(()=>_(r(p,t+"."+e),r(u,t+"."+e),!1));break;case"prj_scan":h(),await d(u),await l(p,()=>{},async e=>{const t=r(u,e);await d(t),await l(r(p,e),(n,s)=>{if(z.test(s)){const{name:a}=m(s);if(a in i.hSize){const{baseSize:o=0,webpSize:f=0}=i.hSize[a];i.sum.baseSize-=o,i.sum.webpSize-=f}c.add(()=>_(n,r(t,s)));return}if(v.test(s)){c.add(()=>{w(n,P,"true/*WEBP*/",!1),b()});return}x.test(s)&&c.add(()=>{w(n,B,I),b()})},async()=>{})});break;case"base_scan":h(),await l(u,()=>{},async e=>{const t=r(u,e);await d(t);const n=r(p,e);await l(t,(s,a)=>{if(!z.test(s))return;const o=r(n,a.replace(z,".webp"));if(!H(s,o))return;const{name:f}=m(a);if(f in i.hSize){const{baseSize:g=0,webpSize:y=0}=i.hSize[f];i.sum.baseSize-=g,i.sum.webpSize-=y}c.add(()=>_(o,s,!1))},async()=>{})});break;default:{h();const{dir:e,name:t,ext:n}=m(T),s={...i.hSize[t],fld_nm:G(e)+"/"+t,ext:n.slice(1)};i.sum.baseSize-=s.baseSize,i.sum.webpSize-=s.webpSize,await _(T,p,!!u)}break}await ee()})();export{H as chkUpdate};
