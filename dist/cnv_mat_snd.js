var o=require("path"),t=require("fs-extra");const[,,_,T,l,m=""]=process.argv,{codec:z}=JSON.parse(T),N=require("@ffmpeg-installer/ffmpeg"),w=require("fluent-ffmpeg");w.setFfmpegPath(N.path);const D=/^.+\/(_notes|Icon\r|\.[^\/]+|[^\/]+\.(db|ini|git))$/;function S(e,n,a){for(const s of(0,t.readdirSync)(e,{withFileTypes:!0})){const i=String(s.name).normalize("NFC");if(D.test(i))continue;if(s.isDirectory()){a(i);continue}const f=(0,o.resolve)(e,i);n(f,i)}}const v=/\.(mp3|wav)$/,u=__filename+"on";let r={sum:{baseSize:0,optSize:0,pathSndOpt:"",pathSndBase:""},hSize:{}};const p=(e=-1)=>{(0,t.writeJsonSync)(u,r,{encoding:"utf8"}),e>-1&&process.exit(e)},c=[],F="."+z,k="."+(z==="opus"?"m4a":z);function h(e,n,a=""){c.push(async()=>{const{dir:s,name:i,ext:f}=(0,o.parse)(e);a==="no_move"?await Promise.allSettled(["m4a","aac","ogg"].map(g=>(0,t.remove)(s+"/"+i+"."+g))):await(0,t.move)(e,n,{overwrite:!0});const{dir:x}=(0,o.parse)(n),d=x+"/"+i+F,O=r.hSize[i]??={fld_nm:(0,o.basename)(s)+"/"+i,baseSize:0,optSize:0,ext:""};await new Promise(g=>w(n).save(d).on("error",P=>console.error(P)).on("end",async(P,E)=>{const y=(0,t.statSync)(n).size,b=(0,t.statSync)(d).size;r.hSize[i]={...O,baseSize:y,optSize:b,ext:f.slice(1)},r.sum.baseSize+=y,r.sum.optSize+=b,await(0,t.move)(d,s+"/"+i+k,{overwrite:!0}),g()}))})}switch(_){case"restore":S(m,()=>{},e=>{S((0,o.resolve)(m,e),(n,a)=>{if(!v.test(a))return;const s=(0,o.resolve)(l,e,a);c.push(()=>(0,t.move)(n,s,{overwrite:!0}));const i=s.slice(0,-3);["m4a","aac","ogg"].forEach(f=>c.push(()=>(0,t.remove)(i+f)))},()=>{})}),Promise.allSettled(c.map(e=>e())).then(()=>p(0));break;case"all_no_move":(0,t.existsSync)(u)&&(r=(0,t.readJsonSync)(u,{encoding:"utf8"}),r.sum.baseSize=r.sum.optSize=0);for(const e of Object.values(r.hSize)){const n="."+e.ext;!v.test(n)||h((0,o.resolve)(l,e.fld_nm+n),(0,o.resolve)(m,e.fld_nm+n),"no_move")}Promise.allSettled(c.map(e=>e())).then(()=>p(0));break;case"all":(0,t.ensureDir)(m),S(l,()=>{},e=>{const n=(0,o.resolve)(m,e);(0,t.ensureDir)(n),S((0,o.resolve)(l,e),(a,s)=>{!v.test(s)||h(a,(0,o.resolve)(n,s))},()=>{})}),Promise.allSettled(c.map(e=>e())).then(()=>p(0));break;default:{(0,t.existsSync)(u)&&(r=(0,t.readJsonSync)(u,{encoding:"utf8"}));const{dir:e,name:n,ext:a}=(0,o.parse)(_),s={...r.hSize[n],fld_nm:(0,o.basename)(e)+"/"+n,ext:a.slice(1)};r.sum.baseSize-=s.baseSize,r.sum.optSize-=s.optSize,h(_,l,m),Promise.allSettled(c.map(i=>i())).then(()=>p(0))}break}
