var D=Object.create;var O=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var $=Object.getPrototypeOf,C=Object.prototype.hasOwnProperty;var I=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of F(t))!C.call(e,s)&&s!==r&&O(e,s,{get:()=>t[s],enumerable:!(o=E(t,s))||o.enumerable});return e};var L=(e,t,r)=>(r=e!=null?D($(e)):{},I(t||!e||!e.__esModule?O(r,"default",{value:e,enumerable:!0}):r,e));var i=require("path"),n=require("fs-extra"),T=L(require("p-queue"));const[,,p,q,m,u=""]=process.argv,{codec:v}=JSON.parse(q),J=require("@ffmpeg-installer/ffmpeg"),k=require("fluent-ffmpeg");k.setFfmpegPath(J.path);const A=/^.+\/(_notes|Icon\r|\.[^\/]+|[^\/]+\.(db|ini|git))$/;function d(e,t,r){for(const o of(0,n.readdirSync)(e,{withFileTypes:!0})){const s=String(o.name).normalize("NFC");if(A.test(s))continue;if(o.isDirectory()){r(s);continue}const c=(0,i.resolve)(e,s);t(c,s)}}const y=/\.(mp3|wav)$/,S=__filename+"on";let a={sum:{baseSize:0,optSize:0,pathSndOpt:"",pathSndBase:""},hSize:{}};const G=(e=-1)=>{const t=Object.entries(a.hSize);t.sort((r,o)=>{const s=r[0],c=o[0];return s<c?-1:s>c?1:0}),a.hSize=Object.fromEntries(t),(0,n.writeJsonSync)(S,a,{encoding:"utf8"}),e>-1&&process.exit(e)},f=new T.default({concurrency:20,autoStart:!1});let b=0;const l=async()=>{b=f.size,console.error(`fn:cnv_mat_snd.ts start: ${b} tasks`),f.start(),await f.onIdle(),G(0)};let _=()=>{const e=f.size;if(!(e%20>0)){if(e===0){_=()=>{};return}console.error(`fn:cnv_mat_snd.ts ${e}/${b} tasks`)}};const R="."+v,B="."+(v==="opus"?"m4a":v);function w(e,t,r=""){f.add(async()=>{const{dir:o,name:s,ext:c}=(0,i.parse)(e);r==="no_move"?await Promise.allSettled(["m4a","aac","ogg"].map(g=>(0,n.remove)(o+"/"+s+"."+g))):await(0,n.move)(e,t,{overwrite:!0});const{dir:N}=(0,i.parse)(t),z=N+"/"+s+R,j=a.hSize[s]??={fld_nm:(0,i.basename)(o)+"/"+s,baseSize:0,optSize:0,ext:""};await new Promise(g=>k(t).save(z).on("error",h=>console.error(h)).on("end",async(h,Q)=>{const P=(0,n.statSync)(t).size,x=(0,n.statSync)(z).size;a.hSize[s]={...j,baseSize:P,optSize:x,ext:c.slice(1)},a.sum.baseSize+=P,a.sum.optSize+=x,await(0,n.move)(z,o+"/"+s+B,{overwrite:!0}),_(),g()}))})}switch(p){case"restore":d(u,()=>{},e=>{d((0,i.resolve)(u,e),(t,r)=>{if(!y.test(r))return;const o=(0,i.resolve)(m,e,r);f.add(async()=>{await(0,n.move)(t,o,{overwrite:!0}),_()});const s=o.slice(0,-3);["m4a","aac","ogg"].forEach(c=>f.add(async()=>{await(0,n.remove)(s+c),_()}))},()=>{})}),l();break;case"all_no_move":(0,n.existsSync)(S)&&(a=(0,n.readJsonSync)(S,{encoding:"utf8"}),a.sum.baseSize=a.sum.optSize=0);for(const e of Object.values(a.hSize)){const t="."+e.ext;y.test(t)&&w((0,i.resolve)(m,e.fld_nm+t),(0,i.resolve)(u,e.fld_nm+t),"no_move")}l();break;case"all":(0,n.ensureDir)(u),d(m,()=>{},e=>{const t=(0,i.resolve)(u,e);(0,n.ensureDir)(t),d((0,i.resolve)(m,e),(r,o)=>{y.test(o)&&w(r,(0,i.resolve)(t,o))},()=>{})}),l();break;default:{(0,n.existsSync)(S)&&(a=(0,n.readJsonSync)(S,{encoding:"utf8"}));const{dir:e,name:t,ext:r}=(0,i.parse)(p),o={...a.hSize[t],fld_nm:(0,i.basename)(e)+"/"+t,ext:r.slice(1)};a.sum.baseSize-=o.baseSize,a.sum.optSize-=o.optSize,w(p,m,u),l()}break}
