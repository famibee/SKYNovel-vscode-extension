const[,,w,u,y,$]=process.argv;import f from"sharp";f.cache(!1);import{styleText as h}from"node:util";import{existsSync as g}from"node:fs";import{readFile as x,stat as m,writeFile as b}from"node:fs/promises";import{fileURLToPath as I}from"node:url";import{copy as k,mkdirs as v,writeJsonSync as R}from"fs-extra/esm";import{BICUBIC2 as B,BILINEAR as S,createICNS as _,createICO as C}from"png2icons";const P=I(import.meta.url);f(w).metadata().then(async e=>{const s={...e,err:"",exif:"",icc:"",iptc:"",xmp:""},r=(i=-1)=>{R(P+"on",s,{encoding:"utf8"}),i>-1&&process.exit(i)};if(r(),!e||!e.width||!e.height){console.log(h(["bgRed","white"],"  \u753B\u50CF\u306E\u30B5\u30A4\u30BA\u304C\u4E0D\u660E\u3067\u3059")),r(20);return}const t=1024;(e.width<t||e.height<t)&&(s.err=`\u5143\u753B\u50CF\u306E\u30B5\u30A4\u30BA\u306F ${t} x ${t} \u4EE5\u4E0A\u306B\u3057\u3066\u4E0B\u3055\u3044\u3002\uFF08width:${e.width} height:${e.height}\uFF09`,r(10));const c=process.cwd()+"/",a=f(w).png().resize({width:t,height:t,fit:"cover",background:{r:0,g:0,b:0,alpha:0}});switch(parseInt(u)){case 1:a.composite([{input:Buffer.from(`<svg><circle cx="${t/2}" cy="${t/2}" r="${t/2}"/></svg>`),blend:"dest-in"}]);break;case 2:a.composite([{input:Buffer.from(`<svg><rect width="${t}" height="${t}" rx="${t/4.5}" ry="${t/4.5}"/></svg>`),blend:"dest-in"}]);break}try{await a.toFile(c+y);const i=c+"build/icon.png";if(!g(i))return;const l=(await m(i)).mtimeMs,d=await x(i);await v(c+"build/icon/"),await Promise.allSettled([async()=>{const o=c+"build/icon/icon.icns",p=g(o)?(await m(o)).mtimeMs:0;if(l>p){const n=_(d,S,0);n&&await b(o,n)}},async()=>{const o=c+"build/icon/icon.ico",p=g(o)?(await m(o)).mtimeMs:0;if(l>p){const n=C(d,B,0,!1,!0);n&&await b(o,n)}},()=>k(i,c+$?"doc/icon.png":"doc/app/icon.png")].map(o=>o()))}catch(i){console.log(h(["bgRed","white"],"  [ERR] %o"),i),s.err=i?.message??String(i),r(20);return}console.log(h(["bgGreen","black"],"fn:cut_round.ts ok.")),process.exit(0)});
