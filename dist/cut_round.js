"use strict";var d=require("node:util"),t=require("fs-extra");const[,,f,w,u]=process.argv,g=require("sharp");g.cache(!1);const{BICUBIC2:b,BILINEAR:y,createICNS:$,createICO:x}=require("png2icons");g(f).metadata().then(n=>{const r={...n,err:"",exif:"",icc:"",iptc:"",xmp:""},a=(i=-1)=>{(0,t.writeJsonSync)(__filename+"on",r,{encoding:"utf8"}),i>-1&&process.exit(i)};a();const e=1024;(n.width<e||n.height<e)&&(r.err=`\u5143\u753B\u50CF\u306E\u30B5\u30A4\u30BA\u306F ${e} x ${e} \u4EE5\u4E0A\u306B\u3057\u3066\u4E0B\u3055\u3044\u3002\uFF08width:${n.width} height:${n.height}\uFF09`,a(10));const s=process.cwd()+"/",h=g(f).png().resize({width:e,height:e,fit:"cover",background:{r:0,g:0,b:0,alpha:0}});switch(parseInt(w)){case 1:h.composite([{input:Buffer.from(`<svg><circle cx="${e/2}" cy="${e/2}" r="${e/2}"/></svg>`),blend:"dest-in"}]);break;case 2:h.composite([{input:Buffer.from(`<svg><rect width="${e}" height="${e}" rx="${e/4.5}" ry="${e/4.5}"/></svg>`),blend:"dest-in"}]);break}h.toFile(s+u).then(async()=>{const i=s+"build/icon.png";if(!(0,t.existsSync)(i))return;const m=(await(0,t.stat)(i)).mtimeMs,l=await(0,t.readFile)(i);await(0,t.ensureDir)(s+"build/icon/"),await Promise.allSettled([async()=>{const c=s+"build/icon/icon.icns",p=(0,t.existsSync)(c)?(await(0,t.stat)(c)).mtimeMs:0;if(m>p){const o=$(l,y,0);o&&await(0,t.writeFile)(c,o)}},async()=>{const c=s+"build/icon/icon.ico",p=(0,t.existsSync)(c)?(await(0,t.stat)(c)).mtimeMs:0;if(m>p){const o=x(l,b,0,!1,!0);o&&await(0,t.writeFile)(c,o)}},()=>(0,t.copy)(i,s+"doc/app/icon.png")].map(c=>c())).then(()=>{console.log((0,d.styleText)(["bgGreen","black"],"fn:cut_round.ts ok.")),process.exit(0)})}).catch(i=>{r.err=i.message,a(20)})});
