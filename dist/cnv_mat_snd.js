const[,,P="",I,m="",c=""]=process.argv,{codec:x}=JSON.parse(I);import R from"@ffmpeg-installer/ffmpeg";import F from"fluent-ffmpeg";F.setFfmpegPath(R.path);import{resolve as i,parse as _,basename as $}from"node:path";import{styleText as G}from"node:util";import{existsSync as d,statSync as y,readdirSync as J}from"fs";import{ensureDir as p,move as O,readJsonSync as U,remove as L,writeJsonSync as C}from"fs-extra/esm";import{fileURLToPath as M}from"node:url";const q=M(import.meta.url),Q=/^.+\/(_notes|Icon\r|\.[^\/]+|[^\/]+\.(db|ini|git))$/;function f(e,t,r){for(const s of J(e,{withFileTypes:!0})){const o=String(s.name).normalize("NFC");if(Q.test(o))continue;if(s.isDirectory()){r(o);continue}const a=i(e,o);t(a,o)}}function W(e,t,r=!0){if(d(e)||console.error(`chkUpdate err path1=${e}=`),!d(t))return r;const s=y(e,{bigint:!0}),o=y(t,{bigint:!0});return s.mtimeMs>o.mtimeMs}const b=/\.(mp3|wav)$/,T=q+"on";let n={sum:{baseSize:0,optSize:0,pathSndOpt:"",pathSndBase:""},hSize:{}};const h=()=>{if(!d(T))return;const e={...n};n=U(T,{encoding:"utf8"}),e.sum={...n.sum};for(const t in n.hSize){const{fld_nm:r,ext:s,baseSize:o,optSize:a}=n.hSize[t],u=r+"."+s;d(i(m,u))||d(i(c,u))?e.hSize[t]=n.hSize[t]:(e.sum.baseSize-=o,e.sum.optSize-=a)}n=e},X=(e=-1)=>{const t=Object.entries(n.hSize);t.sort((r,s)=>{const o=r[0],a=s[0];return o<a?-1:o>a?1:0}),n.hSize=Object.fromEntries(t),C(T,n,{encoding:"utf8"}),e>-1&&process.exit(e)};import Y from"p-queue";const S=new Y({concurrency:20,autoStart:!1});let j=0;const l=async()=>{j=S.size,console.log(G(["bgGreen","black"],`fn:cnv_mat_snd.ts start: ${j} tasks`)),S.start(),await S.onIdle(),X(0)};let v=()=>{const e=S.size;if(!(e%20>0)){if(e===0){v=()=>{};return}console.log(G(["bgGreen","black"],`fn:cnv_mat_snd.ts ${e}/${j} tasks`))}};const A="."+x,B="."+(x==="opus"?"m4a":x);function g(e,t,r=!0){S.add(async()=>{const{dir:s,name:o}=_(e);r?await O(e,t,{overwrite:!0}):await Promise.allSettled(["m4a","aac","ogg"].map(k=>L(s+"/"+o+"."+k)));const{dir:a,ext:u}=_(t),z=a+"/"+o+A,w=n.hSize[o]??={fld_nm:$(s)+"/"+o,baseSize:0,optSize:0,ext:""};await new Promise(k=>F(t).save(z).on("error",E=>console.error(E)).on("end",async(E,H)=>{const N=y(t).size,D=y(z).size;n.hSize[o]={...w,baseSize:N,optSize:D,ext:u.slice(1)},n.sum.baseSize+=N,n.sum.optSize+=D,await O(z,s+"/"+o+B,{overwrite:!0}),v(),k()}))})}switch(P){case"enable":p(c),f(m,()=>{},e=>{const t=i(c,e);p(t),f(i(m,e),(r,s)=>{if(b.test(s)){g(r,i(t,s));return}},()=>{})}),l();break;case"disable":f(c,()=>{},e=>{f(i(c,e),(t,r)=>{if(!b.test(r))return;const s=i(m,e,r);S.add(async()=>{await O(t,s,{overwrite:!0}),v()});const o=s.slice(0,-3);["m4a","aac","ogg"].forEach(a=>S.add(async()=>{await L(o+a),v()}))},()=>{})}),l();break;case"reconv":h(),n.sum.baseSize=n.sum.optSize=0;for(const{ext:e,fld_nm:t}of Object.values(n.hSize))g(i(m,t+"."+e),i(c,t+"."+e),!1);l();break;case"prj_scan":h(),p(c),f(m,()=>{},e=>{const t=i(c,e);p(t),f(i(m,e),(r,s)=>{if(b.test(s)){g(r,i(t,s));return}},()=>{})}),l();break;case"base_scan":h(),f(c,()=>{},e=>{const t=i(c,e);p(t);const r=i(m,e);f(t,(s,o)=>{if(!b.test(s))return;const a=i(r,o.replace(b,B));if(!W(s,a))return;const u=_(a).name;if(u in n.hSize){const{baseSize:z=0,optSize:w=0}=n.hSize[u];n.sum.baseSize-=z,n.sum.optSize-=w}g(a,s,!1)},()=>{})}),l();break;default:{h();const{dir:e,name:t,ext:r}=_(P),s={...n.hSize[t],fld_nm:$(e)+"/"+t,ext:r.slice(1)};n.sum.baseSize-=s.baseSize,n.sum.optSize-=s.optSize,g(P,m,!!c),l()}break}export{W as chkUpdate};
