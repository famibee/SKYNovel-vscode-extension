var r=require("path"),t=require("fs-extra");const[,,g,R,l,m=""]=process.argv,$=require("sharp"),F=/^.+\/(_notes|Icon\r|\.[^\/]+|[^\/]+\.(db|ini|git))$/;function u(e,n,s){(0,t.readdirSync)(e,{withFileTypes:!0}).forEach(o=>{const i=String(o.name).normalize("NFC");if(F.test(i))return;if(o.isDirectory()){s(i);return}const p=(0,r.resolve)(e,i);n(p,i)})}function S(e,n,s,o=e){try{if(!(0,t.existsSync)(e)){console.error(`replaceFile no exists src:${e}`);return}const i=(0,t.readFileSync)(e,{encoding:"utf8"}),p=String(i.replace(n,s));i!==p&&(0,t.writeFileSync)(o,p)}catch(i){console.error(`replaceFile src:${e} ${i}`)}}const b=/\.(jpe?g|png)$/,E=/\.(htm|html)$/,h=/\w+\/\*WEBP\*\//g,v=/\.json$/,I=/("image"\s*:\s*")(.+)\.(jpe?g|png)"/,T=/webp","image_bkup":".+(jpe?g|png)"/,f=__filename+"on";let c={sum:{baseSize:0,webpSize:0,pathImgCmpWebP:"",pathImgCmpBase:""},hSize:{}};const _=(e=-1)=>{(0,t.writeJsonSync)(f,c,{encoding:"utf8"}),e>-1&&process.exit(e)},a=[];function w(e,n,s=""){a.push(async()=>{s!=="no_move"&&await(0,t.move)(e,n,{overwrite:!0});const{dir:o,name:i,ext:p}=(0,r.parse)(e),{dir:x}=(0,r.parse)(n),d=x+"/"+i+".webp",z=c.hSize[i]??={fld_nm:(0,r.basename)(o)+"/"+i,baseSize:0,webpSize:0,ext:""},G=await $(n).webp({quality:Number(z.webp_q??R)}).toFile(d);await(0,t.move)(d,o+"/"+i+".webp",{overwrite:!0});const P=(0,t.statSync)(n).size,y=G.size;c.hSize[i]={...z,baseSize:P,webpSize:y,ext:p.slice(1)},c.sum.baseSize+=P,c.sum.webpSize+=y})}switch(g){case"restore":u(m,()=>{},e=>{u((0,r.resolve)(m,e),(n,s)=>{if(b.test(s)){const o=(0,r.resolve)(l,e,s);a.push(()=>(0,t.move)(n,o,{overwrite:!0}));const{name:i}=(0,r.parse)(s),p=(0,r.resolve)(l,e,i+".webp");a.push(()=>(0,t.remove)(p));return}},()=>{})}),u(l,()=>{},e=>{u((0,r.resolve)(l,e),(n,s)=>{if(E.test(s)){h.lastIndex=0,a.push(async()=>S(n,h,"false/*WEBP*/"));return}v.test(s)&&a.push(async()=>S(n,T,'$1"'))},()=>{})}),Promise.allSettled(a.map(e=>e())).then(()=>_(0));break;case"all_no_move":(0,t.existsSync)(f)&&(c=(0,t.readJsonSync)(f,{encoding:"utf8"}),c.sum.baseSize=c.sum.webpSize=0);for(const e in c.hSize){const n=c.hSize[e],s="."+n.ext;!b.test(s)||w((0,r.resolve)(l,n.fld_nm+s),(0,r.resolve)(m,n.fld_nm+s),"no_move")}Promise.allSettled(a.map(e=>e())).then(()=>_(0));break;case"all":(0,t.ensureDir)(m),u(l,()=>{},e=>{const n=(0,r.resolve)(m,e);(0,t.ensureDir)(n),u((0,r.resolve)(l,e),(s,o)=>{if(b.test(o)){w(s,(0,r.resolve)(n,o));return}E.test(o)&&a.push(async()=>S(s,h,"true/*WEBP*/")),v.test(o)&&a.push(async()=>S(s,I,'$1$2.webp","image_bkup":"$2.$3"'))},()=>{})}),Promise.allSettled(a.map(e=>e())).then(()=>_(0));break;default:{(0,t.existsSync)(f)&&(c=(0,t.readJsonSync)(f,{encoding:"utf8"}));const{dir:e,name:n,ext:s}=(0,r.parse)(g),o={...c.hSize[n],fld_nm:(0,r.basename)(e)+"/"+n,ext:s.slice(1)};c.sum.baseSize-=o.baseSize,c.sum.webpSize-=o.webpSize,w(g,l,m),Promise.allSettled(a.map(i=>i())).then(()=>_(0))}break}
