var n=require("path"),t=require("fs-extra");const[,,g,T,p,u=""]=process.argv,F=require("sharp"),N=/^.+\/(_notes|Icon\r|\.[^\/]+|[^\/]+\.(db|ini|git))$/;function m(e,s,i){for(const o of(0,t.readdirSync)(e,{withFileTypes:!0})){const r=String(o.name).normalize("NFC");if(N.test(r))continue;if(o.isDirectory()){i(r);continue}const l=(0,n.resolve)(e,r);s(l,r)}}function _(e,s,i,o=!0,r=e){try{if(!(0,t.existsSync)(e)){console.error(`replaceFile no exists src:${e}`);return}const l=(0,t.readFileSync)(e,{encoding:"utf8"}),S=String(l.replace(s,i));l!==S?(0,t.writeFileSync)(r,S):o&&console.error(`replaceFile fail by same:${e}`)}catch(l){console.error(`replaceFile src:${e} ${l}`)}}const d=/\.(jpe?g|png)$/,R=/\.(htm|html)$/,E=/\w+\/\*WEBP\*\//g,v=/\.json$/,O=/("image"\s*:\s*")([^.]+(?:\.\d+x\d+)?).*\.(jpe?g|png)"/,$='$1$2.webp","image_bkup":"$2.$3"',G=/webp","image_bkup":".+(jpe?g|png)"/,I='$1"',f=__filename+"on";let c={sum:{baseSize:0,webpSize:0,pathImgCmpWebP:"",pathImgCmpBase:""},hSize:{}};const b=(e=-1)=>{(0,t.writeJsonSync)(f,c,{encoding:"utf8"}),e>-1&&process.exit(e)},a=[];function w(e,s,i=""){a.push(async()=>{i!=="no_move"&&await(0,t.move)(e,s,{overwrite:!0});const{dir:o,name:r,ext:l}=(0,n.parse)(e),{dir:S}=(0,n.parse)(s),P=S+"/"+r+".webp",h=c.hSize[r]??={fld_nm:(0,n.basename)(o)+"/"+r,baseSize:0,webpSize:0,ext:""},x=await F(s).webp({quality:Number(h.webp_q??T)}).toFile(P);await(0,t.move)(P,o+"/"+r+".webp",{overwrite:!0});const z=(0,t.statSync)(s).size,y=x.size;c.hSize[r]={...h,baseSize:z,webpSize:y,ext:l.slice(1)},c.sum.baseSize+=z,c.sum.webpSize+=y})}switch(g){case"restore":m(u,()=>{},e=>{m((0,n.resolve)(u,e),(s,i)=>{if(!d.test(i))return;const o=(0,n.resolve)(p,e,i);a.push(()=>(0,t.move)(s,o,{overwrite:!0}));const{name:r}=(0,n.parse)(i),l=(0,n.resolve)(p,e,r+".webp");a.push(()=>(0,t.remove)(l))},()=>{})}),m(p,()=>{},e=>{m((0,n.resolve)(p,e),(s,i)=>{if(R.test(i)){E.lastIndex=0,a.push(async()=>_(s,E,"false/*WEBP*/",!1));return}v.test(i)&&a.push(async()=>_(s,G,I))},()=>{})}),Promise.allSettled(a.map(e=>e())).then(()=>b(0));break;case"all_no_move":(0,t.existsSync)(f)&&(c=(0,t.readJsonSync)(f,{encoding:"utf8"}),c.sum.baseSize=c.sum.webpSize=0);for(const e of Object.values(c.hSize)){const s="."+e.ext;!d.test(s)||w((0,n.resolve)(p,e.fld_nm+s),(0,n.resolve)(u,e.fld_nm+s),"no_move")}Promise.allSettled(a.map(e=>e())).then(()=>b(0));break;case"all":(0,t.ensureDir)(u),m(p,()=>{},e=>{const s=(0,n.resolve)(u,e);(0,t.ensureDir)(s),m((0,n.resolve)(p,e),(i,o)=>{if(d.test(o)){w(i,(0,n.resolve)(s,o));return}if(R.test(o)){a.push(async()=>_(i,E,"true/*WEBP*/",!1));return}v.test(o)&&a.push(async()=>_(i,O,$))},()=>{})}),Promise.allSettled(a.map(e=>e())).then(()=>b(0));break;default:{(0,t.existsSync)(f)&&(c=(0,t.readJsonSync)(f,{encoding:"utf8"}));const{dir:e,name:s,ext:i}=(0,n.parse)(g),o={...c.hSize[s],fld_nm:(0,n.basename)(e)+"/"+s,ext:i.slice(1)};c.sum.baseSize-=o.baseSize,c.sum.webpSize-=o.webpSize,w(g,p,u),Promise.allSettled(a.map(r=>r())).then(()=>b(0))}break}
