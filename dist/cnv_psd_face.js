const[,,b="",h]=process.argv;import E from"psd.js";import P from"sharp";P.cache(!1);import{mkdtempSync as F}from"node:fs";import{ensureFileSync as R,remove as w,outputFile as x}from"fs-extra/esm";import{basename as A,extname as L}from"node:path";import{styleText as l}from"node:util";import{fileURLToPath as T}from"node:url";const k=T(import.meta.url),C=import.meta.dirname,G=k.slice(C.length+1,-3),y=F(`/tmp/${G}-`);function N(m){return A(m,L(m))}function O(m,{name:$,left:t,top:n,width:a,height:o,layer:c},g,p,r,s){const e=m+"_"+$.replaceAll(Y,"#"),i=`${h}face/${e}.png`,f=c.blendingMode(),d=`${g?";":""}	[add_face name=${e} dx=${t} dy=${n}${f==="normal"?"":` blendmode=${f}`}]
`;if(!g){const S=async()=>{console.log(l(["blueBright"],`fn:cnv_psd_face.ts f canvas(${r},${s}) layer(${String(t).padStart(4)}, ${String(n).padStart(4)}, ${String(a).padStart(4)}, ${String(o).padStart(4)}) name:${e}:`)),await c.image.saveAsPng(i)};return p.push(S()),d}const u=`${y}/${e}.png`,D=async()=>{console.log(l(["blueBright"],`fn:cnv_psd_face.ts b canvas(${r},${s}) layer(${String(t).padStart(4)}, ${String(n).padStart(4)}, ${String(a).padStart(4)}, ${String(o).padStart(4)}) name:${e}:`));try{await c.image.saveAsPng(u),await P(u).extend({left:t,right:r-t-a,top:n,bottom:s-n-o,background:{r:0,g:0,b:0,alpha:0}}).toFile(i)}catch(S){console.log(l(["bgYellow","white"],`  extend(left:${t}, right:${r-t-a}, top:${n}, bottom:${s-n-o})`)),console.log(l(["bgYellow","white"],"  PSD \u304C\u7570\u5E38\u3067\u3059"+(t<0||r-t-a<0||n<0||s-n-o<0)?"\u3002\u30EC\u30A4\u30E4\u304C\u30AD\u30E3\u30F3\u30D0\u30B9\u304B\u3089\u306F\u307F\u51FA\u3066\u3044\u307E\u3059\u3002\u30EC\u30A4\u30E4\u3092\u52D5\u304B\u3059\u304B\u30C8\u30EA\u30DF\u30F3\u30B0\u3057\u3066\u304F\u3060\u3055\u3044":"")),console.log(l(["bgRed","white"],"  [ERR] %o"),S)}};return p.push(D()),d}const Y=/[\\\/:*?"<>|\.\s]/g,_=[];E.open(b).then(m=>{const $=m.tree(),{document:{width:t,height:n}}=$.export(),a=N(b);let o=`;#ED FACE
; *******************************************************
;#ED {"width":${t}, "height":${n}}
`;const c=$.descendants(),g=c.length;let p=g;for(;0<=--p;){const{type:e,parent:i}=c[p];if(e==="group"||i.isRoot())break}let r="";for(let e=0;e<g;++e){const i=c[e],{type:f,name:d,parent:u}=i;if(f==="group"){o+=`;#ED FACE_FOLDER ${d}
`,r="_"+d;continue}u.isRoot()&&(r!==""&&(o+=`;#ED FACE_FOLDER /
`),r=""),o+=O(a+r,i,p<=e,_,t,n)}o+=`
; *******************************************************

[return]
`;const s=h+`face/face${a}.sn`;R(s),_.push(x(s,o,"utf8")),Promise.allSettled(_).then(async()=>{await w(y),console.log(l(["bgGreen","black"],"fn:cnv_psd_face.ts ok.")),process.exit(0)})});
