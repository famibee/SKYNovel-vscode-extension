const[,,d,b,u]=process.argv;import m from"sharp";m.cache(!1);import{styleText as y}from"node:util";import{copy as $,ensureDir as x,existsSync as p,readFile as I,stat as f,writeFile as w,writeJsonSync as v}from"fs-extra";import{BICUBIC2 as k,BILINEAR as B,createICNS as C,createICO as S}from"png2icons";m(d).metadata().then(s=>{const o={...s,err:"",exif:"",icc:"",iptc:"",xmp:""},r=(e=-1)=>{v(__filename+"on",o,{encoding:"utf8"}),e>-1&&process.exit(e)};r();const t=1024;(s.width<t||s.height<t)&&(o.err=`\u5143\u753B\u50CF\u306E\u30B5\u30A4\u30BA\u306F ${t} x ${t} \u4EE5\u4E0A\u306B\u3057\u3066\u4E0B\u3055\u3044\u3002\uFF08width:${s.width} height:${s.height}\uFF09`,r(10));const c=process.cwd()+"/",a=m(d).png().resize({width:t,height:t,fit:"cover",background:{r:0,g:0,b:0,alpha:0}});switch(parseInt(b)){case 1:a.composite([{input:Buffer.from(`<svg><circle cx="${t/2}" cy="${t/2}" r="${t/2}"/></svg>`),blend:"dest-in"}]);break;case 2:a.composite([{input:Buffer.from(`<svg><rect width="${t}" height="${t}" rx="${t/4.5}" ry="${t/4.5}"/></svg>`),blend:"dest-in"}]);break}a.toFile(c+u).then(async()=>{const e=c+"build/icon.png";if(!p(e))return;const g=(await f(e)).mtimeMs,l=await I(e);await x(c+"build/icon/"),await Promise.allSettled([async()=>{const i=c+"build/icon/icon.icns",h=p(i)?(await f(i)).mtimeMs:0;if(g>h){const n=C(l,B,0);n&&await w(i,n)}},async()=>{const i=c+"build/icon/icon.ico",h=p(i)?(await f(i)).mtimeMs:0;if(g>h){const n=S(l,k,0,!1,!0);n&&await w(i,n)}},()=>$(e,c+"doc/app/icon.png")].map(i=>i())).then(()=>{console.log(y(["bgGreen","black"],"fn:cut_round.ts ok.")),process.exit(0)})}).catch(e=>{o.err=e.message,r(20)})});
