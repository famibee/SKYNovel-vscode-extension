var s=require("path"),t=require("fs-extra");const[,,_,O,f,m=""]=process.argv,{codec:z}=JSON.parse(O),N=require("@ffmpeg-installer/ffmpeg"),w=require("fluent-ffmpeg");w.setFfmpegPath(N.path);const E=/^.+\/(_notes|Icon\r|\.[^\/]+|[^\/]+\.(db|ini|git))$/;function S(e,n,r){(0,t.readdirSync)(e,{withFileTypes:!0}).forEach(o=>{const i=String(o.name).normalize("NFC");if(E.test(i))return;if(o.isDirectory()){r(i);return}const l=(0,s.resolve)(e,i);n(l,i)})}const h=/\.(mp3|wav)$/,u=__filename+"on";let a={sum:{baseSize:0,optSize:0,pathSndOpt:"",pathSndBase:""},hSize:{}};const p=(e=-1)=>{(0,t.writeJsonSync)(u,a,{encoding:"utf8"}),e>-1&&process.exit(e)},c=[],D="."+z,k="."+(z==="opus"?"m4a":z);function v(e,n,r=""){c.push(async()=>{const{dir:o,name:i,ext:l}=(0,s.parse)(e);r==="no_move"?await Promise.allSettled(["m4a","aac","ogg"].map(g=>(0,t.remove)(o+"/"+i+"."+g))):await(0,t.move)(e,n,{overwrite:!0});const{dir:x}=(0,s.parse)(n),d=x+"/"+i+D,T=a.hSize[i]??={fld_nm:(0,s.basename)(o)+"/"+i,baseSize:0,optSize:0,ext:""};await new Promise(g=>w(n).save(d).on("error",P=>console.error(P)).on("end",async(P,F)=>{const y=(0,t.statSync)(n).size,b=(0,t.statSync)(d).size;a.hSize[i]={...T,baseSize:y,optSize:b,ext:l.slice(1)},a.sum.baseSize+=y,a.sum.optSize+=b,await(0,t.move)(d,o+"/"+i+k,{overwrite:!0}),g()}))})}switch(_){case"restore":S(m,()=>{},e=>{S((0,s.resolve)(m,e),(n,r)=>{if(!h.test(r))return;const o=(0,s.resolve)(f,e,r);c.push(()=>(0,t.move)(n,o,{overwrite:!0}));const i=o.slice(0,-3);["opus","aac","ogg"].forEach(l=>c.push(()=>(0,t.remove)(i+l)))},()=>{})}),Promise.allSettled(c.map(e=>e())).then(()=>p(0));break;case"all_no_move":(0,t.existsSync)(u)&&(a=(0,t.readJsonSync)(u,{encoding:"utf8"}),a.sum.baseSize=a.sum.optSize=0);for(const e in a.hSize){const n=a.hSize[e],r="."+n.ext;!h.test(r)||v((0,s.resolve)(f,n.fld_nm+r),(0,s.resolve)(m,n.fld_nm+r),"no_move")}Promise.allSettled(c.map(e=>e())).then(()=>p(0));break;case"all":(0,t.ensureDir)(m),S(f,()=>{},e=>{const n=(0,s.resolve)(m,e);(0,t.ensureDir)(n),S((0,s.resolve)(f,e),(r,o)=>{!h.test(o)||v(r,(0,s.resolve)(n,o))},()=>{})}),Promise.allSettled(c.map(e=>e())).then(()=>p(0));break;default:{(0,t.existsSync)(u)&&(a=(0,t.readJsonSync)(u,{encoding:"utf8"}));const{dir:e,name:n,ext:r}=(0,s.parse)(_),o={...a.hSize[n],fld_nm:(0,s.basename)(e)+"/"+n,ext:r.slice(1)};a.sum.baseSize-=o.baseSize,a.sum.optSize-=o.optSize,v(_,f,m),Promise.allSettled(c.map(i=>i())).then(()=>p(0))}break}
