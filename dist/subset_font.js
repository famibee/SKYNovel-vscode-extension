var o=require("fs-extra"),p=require("os"),u=require("path");const[,,...F]=process.argv,e=F.includes("--minify"),_=require("subset-font"),c=process.platform==="win32",T=e?async(n,t,i)=>{const m=await(0,o.readFile)(n),S=await _(m,i,{targetFormat:"woff2"});await(0,o.outputFile)(t,S)}:(n,t)=>(0,o.ensureLink)(n,t),r=require("./font.json"),a=[],s={},{username:f}=(0,p.userInfo)(),l="core/font",P=c?`C:/Users/${f}/AppData/Local/Microsoft/Windows/Fonts`:`/Users/${f}/Library/Fonts`,g=c?"C:/Windows/Fonts":"/Library/Fonts";for(const n in r){const t=String(r[n].inp).replace("::PATH_PRJ_FONTS::",l).replace("::PATH_USER_FONTS::",P).replace("::PATH_OS_FONTS::",g),i=`doc/prj/script/${n}${e?".woff2":(0,u.extname)(t)}`;s[n]={inp:t,out:i,iSize:1,oSize:1},a.push(T(t,i,r[n].txt))}Promise.allSettled(a).then(()=>{for(const n in s)s[n]={...s[n],inp:r[n].inp,iSize:(0,o.statSync)(s[n].inp).size,oSize:(0,o.statSync)(s[n].out).size};(0,o.outputJsonSync)("core/font/info.json",s)});
