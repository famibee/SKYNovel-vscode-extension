var D=Object.create;var j=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var B=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,L=Object.prototype.hasOwnProperty;var q=(e,t,r,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of B(t))!L.call(e,o)&&o!==r&&j(e,o,{get:()=>t[o],enumerable:!(s=$(t,o))||s.enumerable});return e};var G=(e,t,r)=>(r=e!=null?D(I(e)):{},q(t||!e||!e.__esModule?j(r,"default",{value:e,enumerable:!0}):r,e));var i=require("path"),n=require("fs-extra"),N=G(require("p-queue"));const[,,y,J,u,m=""]=process.argv,{codec:h}=JSON.parse(J),R=require("@ffmpeg-installer/ffmpeg"),E=require("fluent-ffmpeg");E.setFfmpegPath(R.path);const C=/^.+\/(_notes|Icon\r|\.[^\/]+|[^\/]+\.(db|ini|git))$/;function f(e,t,r){for(const s of(0,n.readdirSync)(e,{withFileTypes:!0})){const o=String(s.name).normalize("NFC");if(C.test(o))continue;if(s.isDirectory()){r(o);continue}const c=(0,i.resolve)(e,o);t(c,o)}}const _=/\.(mp3|wav)$/,P=__filename+"on";let a={sum:{baseSize:0,optSize:0,pathSndOpt:"",pathSndBase:""},hSize:{}};const g=()=>{if(!(0,n.existsSync)(P))return;const e={...a};a=(0,n.readJsonSync)(P,{encoding:"utf8"}),e.sum={...a.sum};for(const t in a.hSize){const{fld_nm:r,ext:s,baseSize:o,optSize:c}=a.hSize[t],S=r+"."+s;(0,n.existsSync)((0,i.resolve)(u,S))||(0,n.existsSync)((0,i.resolve)(m,S))?e.hSize[t]=a.hSize[t]:(e.sum.baseSize-=o,e.sum.optSize-=c)}a=e},M=(e=-1)=>{const t=Object.entries(a.hSize);t.sort((r,s)=>{const o=r[0],c=s[0];return o<c?-1:o>c?1:0}),a.hSize=Object.fromEntries(t),(0,n.writeJsonSync)(P,a,{encoding:"utf8"}),e>-1&&process.exit(e)},d=new N.default({concurrency:20,autoStart:!1});let O=0;const l=async()=>{O=d.size,console.error(`fn:cnv_mat_snd.ts start: ${O} tasks`),d.start(),await d.onIdle(),M(0)};let v=()=>{const e=d.size;if(!(e%20>0)){if(e===0){v=()=>{};return}console.error(`fn:cnv_mat_snd.ts ${e}/${O} tasks`)}};const Q="."+h,F="."+(h==="opus"?"m4a":h);function b(e,t,r=!0){d.add(async()=>{const{dir:s,name:o}=(0,i.parse)(e);r?await(0,n.move)(e,t,{overwrite:!0}):await Promise.allSettled(["m4a","aac","ogg"].map(w=>(0,n.remove)(s+"/"+o+"."+w)));const{dir:c,ext:S}=(0,i.parse)(t),z=c+"/"+o+Q,p=a.hSize[o]??={fld_nm:(0,i.basename)(s)+"/"+o,baseSize:0,optSize:0,ext:""};await new Promise(w=>E(t).save(z).on("error",k=>console.error(k)).on("end",async(k,W)=>{const x=(0,n.statSync)(t).size,T=(0,n.statSync)(z).size;a.hSize[o]={...p,baseSize:x,optSize:T,ext:S.slice(1)},a.sum.baseSize+=x,a.sum.optSize+=T,await(0,n.move)(z,s+"/"+o+F,{overwrite:!0}),v(),w()}))})}switch(y){case"enable":(0,n.ensureDir)(m),f(u,()=>{},e=>{const t=(0,i.resolve)(m,e);(0,n.ensureDir)(t),f((0,i.resolve)(u,e),(r,s)=>{if(_.test(s)){b(r,(0,i.resolve)(t,s));return}},()=>{})}),l();break;case"disable":f(m,()=>{},e=>{f((0,i.resolve)(m,e),(t,r)=>{if(!_.test(r))return;const s=(0,i.resolve)(u,e,r);d.add(async()=>{await(0,n.move)(t,s,{overwrite:!0}),v()});const o=s.slice(0,-3);["m4a","aac","ogg"].forEach(c=>d.add(async()=>{await(0,n.remove)(o+c),v()}))},()=>{})}),l();break;case"reconv":g(),a.sum.baseSize=a.sum.optSize=0;for(const{ext:e,fld_nm:t}of Object.values(a.hSize))b((0,i.resolve)(u,t+"."+e),(0,i.resolve)(m,t+"."+e),!1);l();break;case"prj_scan":g(),(0,n.ensureDir)(m),f(u,()=>{},e=>{const t=(0,i.resolve)(m,e);(0,n.ensureDir)(t),f((0,i.resolve)(u,e),(r,s)=>{if(_.test(s)){b(r,(0,i.resolve)(t,s));return}},()=>{})}),l();break;case"base_scan":g(),f(m,()=>{},e=>{const t=(0,i.resolve)(m,e);(0,n.ensureDir)(t);const r=(0,i.resolve)(u,e);f(t,(s,o)=>{if(!_.test(s))return;const c=(0,i.resolve)(r,o.replace(_,F));if((0,n.existsSync)(c)){const z=(0,n.statSync)(s).mtimeMs,p=(0,n.statSync)(c).mtimeMs;if(z<p)return}const S=(0,i.parse)(c).name;if(S in a.hSize){const{baseSize:z=0,optSize:p=0}=a.hSize[S];a.sum.baseSize-=z,a.sum.optSize-=p}b(c,s,!1)},()=>{})}),l();break;default:{g();const{dir:e,name:t,ext:r}=(0,i.parse)(y),s={...a.hSize[t],fld_nm:(0,i.basename)(e)+"/"+t,ext:r.slice(1)};a.sum.baseSize-=s.baseSize,a.sum.optSize-=s.optSize,b(y,u,!!m),l()}break}
