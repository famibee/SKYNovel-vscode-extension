var o=require("fs-extra"),p=require("os"),m=require("path");const[,,..._]=process.argv,r=_.includes("--minify"),F=require("subset-font"),c=process.platform==="win32",s={},l=(n=-1)=>{(0,o.writeJsonSync)(__filename+"on",s,{encoding:"utf8"}),n>-1&&process.exit(n)},g=r?async(n,t,i)=>{const u=await(0,o.readFile)(n),S=await F(u,i,{targetFormat:"woff2"});await(0,o.outputFile)(t,S)}:(n,t)=>(0,o.ensureLink)(n,t),e=require("./font.json"),a=[],{username:f}=(0,p.userInfo)(),T="core/font",w=c?`C:/Users/${f}/AppData/Local/Microsoft/Windows/Fonts`:`/Users/${f}/Library/Fonts`,P=c?"C:/Windows/Fonts":"/Library/Fonts";for(const n in e){const t=String(e[n].inp).replace("::PATH_PRJ_FONTS::",T).replace("::PATH_USER_FONTS::",w).replace("::PATH_OS_FONTS::",P),i=`doc/prj/script/${n}${r?".woff2":(0,m.extname)(t)}`;s[n]={inp:t,out:i,iSize:1,oSize:1},a.push(g(t,i,e[n].txt))}Promise.allSettled(a).then(()=>{for(const n in s)s[n]={...s[n],inp:e[n].inp,iSize:(0,o.statSync)(s[n].inp).size,oSize:(0,o.statSync)(s[n].out).size};l(0)});
