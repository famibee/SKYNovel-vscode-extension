var S=require("child_process"),o=require("fs-extra"),l=require("os"),_=require("path");const[,,...y]=process.argv,a=y.includes("--minify"),f=process.platform==="win32",c={},O=(n=-1)=>{(0,o.writeJsonSync)(__filename+"on",c,{encoding:"utf8"}),n>-1&&process.exit(n)},T=a?async(n,e)=>{try{e=e.replaceAll('"','\\"'),await new Promise((t,r)=>(0,S.exec)(`pyftsubset ${n.inp} --text="${e}" --layout-features='*' --flavor=woff2 --output-file=${n.out}`,s=>{if(s){const p=s.message.replace(/--text=[^\n]+/,"...");console.error(p),n.err+=p+`
`,r();return}t()}))}catch(t){n.err+=t.message.replace(/--text=[^\n]+/,"...")+`
`}}:n=>(0,o.copy)(n.inp,n.out),i=require("./font.json"),m=[],{username:u}=(0,l.userInfo)(),g="core/font",P=f?`C:/Users/${u}/AppData/Local/Microsoft/Windows/Fonts`:`/Users/${u}/Library/Fonts`,F=f?"C:/Windows/Fonts":"/Library/Fonts";for(const[n,e]of Object.entries(i)){const t=String(e.inp).replace("::PATH_PRJ_FONTS::",g).replace("::PATH_USER_FONTS::",P).replace("::PATH_OS_FONTS::",F),r=`doc/prj/script/${n}${a?".woff2":(0,_.extname)(t)}`,s=c[n]={inp:t,out:r,iSize:1,oSize:1,err:""};if(!(0,o.existsSync)(t)){s.err=`\u5909\u63DB\u5931\u6557\u3067\u3059\u3002\u5165\u529B\u30D5\u30A1\u30A4\u30EB ${i[n].inp.slice(20)} \u304C\u5B58\u5728\u3059\u308B\u304B\u78BA\u8A8D\u3057\u3066\u304F\u3060\u3055\u3044`;continue}m.push(T(s,i[n].txt))}Promise.allSettled(m).then(()=>{for(const[n,e]of Object.entries(c)){const{inp:t,out:r}=e;if(e.inp=i[n].inp,!(0,o.existsSync)(r)){e.err+=`\u5909\u63DB\u5931\u6557\u3067\u3059\u3002\u51FA\u529B\u30D5\u30A1\u30A4\u30EB ${e.out} \u304C\u5B58\u5728\u3057\u307E\u305B\u3093`;continue}e.iSize=(0,o.statSync)(t).size,e.oSize=(0,o.statSync)(r).size}O(0)});
