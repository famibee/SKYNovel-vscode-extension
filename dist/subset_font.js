var t=require("fs-extra"),u=require("os"),m=require("path");const[,,..._]=process.argv,c=_.includes("--minify"),l=require("subset-font"),a=process.platform==="win32",i={},F=(n=-1)=>{(0,t.writeJsonSync)(__filename+"on",i,{encoding:"utf8"}),n>-1&&process.exit(n)},g=c?async(n,o,s)=>{const e=await(0,t.readFile)(n),S=await l(e,s,{targetFormat:"woff2"});await(0,t.outputFile)(o,S)}:(n,o)=>(0,t.ensureLink)(n,o),r=require("./font.json"),f=[],{username:p}=(0,u.userInfo)(),T="core/font",w=a?`C:/Users/${p}/AppData/Local/Microsoft/Windows/Fonts`:`/Users/${p}/Library/Fonts`,P=a?"C:/Windows/Fonts":"/Library/Fonts";for(const n in r){const o=String(r[n].inp).replace("::PATH_PRJ_FONTS::",T).replace("::PATH_USER_FONTS::",w).replace("::PATH_OS_FONTS::",P),s=`doc/prj/script/${n}${c?".woff2":(0,m.extname)(o)}`;if(i[n]={inp:o,out:s,iSize:1,oSize:1,err:""},!(0,t.existsSync)(o)){i[n].err=`\u5909\u63DB\u5931\u6557\u3067\u3059\u3002\u5165\u529B\u30D5\u30A1\u30A4\u30EB ${r[n].inp.slice(20)} \u304C\u5B58\u5728\u3059\u308B\u304B\u78BA\u8A8D\u3057\u3066\u304F\u3060\u3055\u3044`;continue}f.push(g(o,s,r[n].txt))}Promise.allSettled(f).then(()=>{for(const n in i){const o=i[n],s=o.inp,e=o.out;if(o.inp=r[n].inp,!(0,t.existsSync)(e)){i[n].err=`\u5909\u63DB\u5931\u6557\u3067\u3059\u3002\u51FA\u529B\u30D5\u30A1\u30A4\u30EB ${o.out} \u304C\u5B58\u5728\u3057\u307E\u305B\u3093`;continue}i[n].iSize=(0,t.statSync)(s).size,i[n].oSize=(0,t.statSync)(e).size}F(0)});
